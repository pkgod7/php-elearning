Note that along with C-style strings, which are arrays, there are also string literals, such as the keyword this. In reality, both of these string types are merely just collections of characters sitting next to each other in memory. The only difference is that you cannot modify string literals, whereas you can modify arrays. Functions that take a C-style string will be just as happy to accept string literals unless they modify the string (in which case your program will crash). Some things that might look like strings are not strings; in particular, a character enclosed in single quotes, like this (a), is not a string. It is a single character, which can be assigned to a specific location in a string, but which cannot be treated as a string. (Remember how arrays act like pointers when passed into functions, Characters dont, so if you pass a single character into a function, it wont work; the function is expecting a char*, not a char.) 